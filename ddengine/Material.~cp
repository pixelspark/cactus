#include "Material.h"

Material::Material() {
    
}

Material::~Material() {

}
Material::Material(int color) {
    this->setColor(color);   
}

Material::Material(Texture* t) {
    this->setTexture(t);
    this->setReflectivity(255);
}

void Material::setTexture(Texture* tex) {
    this->texture = tex;
}

void Material::setEnvMap(Texture* map) {
    this->envmap = map;
}

void Material::setColor(int color) {
    this->color = color;
}

void Material::setTransparency(int factor) {
    this->transparency = Math::crop(factor,0,255);
    Math::
}

void Material::setReflectivity(int factor) {

}

void Material::setFlat(bool flat) {

}

void Material::setWireframe(bool wf) {

}

Texture* Material::getTexture() {

}

Texture* Material::getEnvMap() {

}

int Material::getColor() {

}

int Material::getTransparency() {

}

int Material::getReflectivity() {

}

bool Material::isFlat() {

}

bool Material::isWireframe() {

}
